import Head from "next/head";
import Image from "next/image";
import RegionModal from "../components/regionmodal";
import styles from "../styles/Home.module.css";
import { useState, useEffect } from "react";
import axios from "axios";

const Home = () => {

    const [data, setData] = useState([]);
    const initialState = {
            region:"", capital:"", population:""
    };

    const [buttonText, setButtonText] = useState("Submit");
    const [buttonColor, setButtonColor] = useState(false);
    const [state, setState] = useState(initialState);
    const [message, setMessage] = useState('');
    const [showModal, setShowModal] = useState(false);

    const { region, capital, population } = state;

    useEffect(() => {
      getData();
    }, []);

    const getData = async () => {
      const response = await axios.get(process.env.NEXT_PUBLIC_API_URL);
      if (response.status === 200) {
        setData(response.data);
      }
    };

    const changeInput = (e)=>{
        let {name, value} = e.target;
        setState({...state, [name]:value});
    };

    const addRegion = async()=>{
            setButtonText("Please wait");
            setButtonColor(true);
            await axios.post(`${process.env.NEXT_PUBLIC_API_URL}/region`,{
                region:region, capital:capital, population:population
        }).then((response)=>{
            const result=response.data.data;
            setData([...data, result]);
            setMessage(response.data.message); 
            setState(initialState);
        }).catch((err)=>{
            setMessage(err.response.message);
        }).finally(()=>{
            setButtonText("Submit");
            setButtonColor(false);
            setMessage("");
            setShowModal(false);
            
        });
    };

    const submitData = (e)=>{
        e.preventDefault();
        if(!region || !capital || !population){
            setMessage("Please provide value for each input field!");
        }else{
            addRegion(state);
        }
    };

    const resetFields = ()=>{
      setState(initialState);
    }
    
    const onDelete = async (_id) => {
        if(window.confirm("Are you sure you want to delete this region!")){
            const response = await axios.delete(`${process.env.NEXT_PUBLIC_API_URL}/region/${_id}`);
            if(response.status === 200){
                getData();
                window.alert("Record deleted successfully!");
            }
        }
    };

  return (
    <div>
      <Head>
        <title> Create Next App </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="nav">
        <a href="/" className="active">Home</a>
      </div>
      <div className="showmodal">
        <button type="button" className="btn_showmodal" onClick={()=>setShowModal(true)}>Add Region</button>
      </div>
      <RegionModal show={showModal} onClose={()=>setShowModal(false)}>
        <div className="panel">
          <div className="panel-body">
            <form className="form_container" onSubmit={submitData}>
              <div>{message}</div>
              <input type="text" name="region" className="reg_input" placeholder="Enter Region Name" onChange={changeInput} value={region} />
              <input type="text" name="capital" className="reg_input" placeholder="Enter Region Capital" onChange={changeInput} value={capital} />
              <input type="number" name="population" className="reg_input" placeholder="Enter Population" onChange={changeInput} value={population} />
              <div className="btn">
                <button type="submit" className="btn_reg" onClick={()=>{buttonColor}} style={{backgroundColor:buttonColor==true?"gray":"green"}}> {buttonText} </button>&nbsp;
                <button type="reset" className="btn_reset" onClick={resetFields} > Reset </button>
              </div>
              
            </form>
          </div>
        </div>
      </RegionModal>
      <div className="panel">
        <div className="panel-body">
          <div className="panel-table">
            <table className="styled_table">
              <thead>
                <tr>
                  <th style={{ textAlign: "center" }}> No. </th>
                  <th style={{ textAlign: "center" }}> Region Name </th>
                  <th style={{ textAlign: "center" }}> Regional Capital </th>
                  <th style={{ textAlign: "center" }}> Population </th>
                  <th style={{ textAlign: "center" }}> Action(s) </th>
                </tr>
              </thead>
              <tbody>
                {data &&
                  data.map((item, index) => {
                    return (
                      <tr key={index}>
                        <th scope="row"> {index + 1} </th> 
                        <td> {item.regionname} </td>
                        <td> {item.capital} </td>
                        <td> {item.population} </td> 
                        <td> 
                          <a href={`/district/${item._id}`} className="btn_view">View District</a>&nbsp;
                          <a href={`/region/${item._id}`} className="btn_edit">Edit</a>&nbsp;
                          <a className="btn_delete" onClick={()=> onDelete(item._id)}>Delete</a>
                        </td>
                      </tr>
                    );
                  })} 
              </tbody> 
            </table>
            <div> {data.length === 0 && <p style={{textAlign:"center"}}> Data not found! </p>} </div> 
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;